{"ast":null,"code":"import * as React from 'react';\nimport * as RadixDirection from '@radix-ui/react-direction';\nimport { sanitizeNamespaceImport, createTheme } from '@aws-amplify/ui';\nimport { ThemeContext } from './ThemeContext.mjs';\nimport { ThemeStyle } from './ThemeStyle.mjs';\n\n// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\nconst {\n  DirectionProvider\n} = sanitizeNamespaceImport(RadixDirection);\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/theming)\n */\nfunction ThemeProvider({\n  children,\n  colorMode,\n  direction = 'ltr',\n  nonce,\n  theme\n}) {\n  const value = React.useMemo(() => ({\n    theme: createTheme(theme),\n    colorMode\n  }), [theme, colorMode]);\n  return React.createElement(ThemeContext.Provider, {\n    value: value\n  }, React.createElement(DirectionProvider, {\n    dir: direction\n  }, React.createElement(\"div\", {\n    \"data-amplify-theme\": value.theme.name,\n    \"data-amplify-color-mode\": colorMode,\n    dir: direction\n  }, children), theme ? React.createElement(ThemeStyle, {\n    theme: value.theme,\n    nonce: nonce\n  }) : null));\n}\nexport { ThemeProvider };","map":{"version":3,"names":["React","RadixDirection","sanitizeNamespaceImport","createTheme","ThemeContext","ThemeStyle","DirectionProvider","ThemeProvider","children","colorMode","direction","nonce","theme","value","useMemo","createElement","Provider","dir","name"],"sources":["/Users/kriziafrias/Documents/GitHub/hbaacademy/node_modules/@aws-amplify/ui-react/dist/esm/components/ThemeProvider/ThemeProvider.mjs"],"sourcesContent":["import * as React from 'react';\nimport * as RadixDirection from '@radix-ui/react-direction';\nimport { sanitizeNamespaceImport, createTheme } from '@aws-amplify/ui';\nimport { ThemeContext } from './ThemeContext.mjs';\nimport { ThemeStyle } from './ThemeStyle.mjs';\n\n// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\nconst { DirectionProvider } = sanitizeNamespaceImport(RadixDirection);\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/theming)\n */\nfunction ThemeProvider({ children, colorMode, direction = 'ltr', nonce, theme, }) {\n    const value = React.useMemo(() => ({ theme: createTheme(theme), colorMode }), [theme, colorMode]);\n    return (React.createElement(ThemeContext.Provider, { value: value },\n        React.createElement(DirectionProvider, { dir: direction },\n            React.createElement(\"div\", { \"data-amplify-theme\": value.theme.name, \"data-amplify-color-mode\": colorMode, dir: direction }, children),\n            theme ? React.createElement(ThemeStyle, { theme: value.theme, nonce: nonce }) : null)));\n}\n\nexport { ThemeProvider };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,cAAc,MAAM,2BAA2B;AAC3D,SAASC,uBAAuB,EAAEC,WAAW,QAAQ,iBAAiB;AACtE,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA;AACA,MAAM;EAAEC;AAAkB,CAAC,GAAGJ,uBAAuB,CAACD,cAAc,CAAC;AACrE;AACA;AACA;AACA,SAASM,aAAaA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,SAAS,GAAG,KAAK;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EAC9E,MAAMC,KAAK,GAAGb,KAAK,CAACc,OAAO,CAAC,OAAO;IAAEF,KAAK,EAAET,WAAW,CAACS,KAAK,CAAC;IAAEH;EAAU,CAAC,CAAC,EAAE,CAACG,KAAK,EAAEH,SAAS,CAAC,CAAC;EACjG,OAAQT,KAAK,CAACe,aAAa,CAACX,YAAY,CAACY,QAAQ,EAAE;IAAEH,KAAK,EAAEA;EAAM,CAAC,EAC/Db,KAAK,CAACe,aAAa,CAACT,iBAAiB,EAAE;IAAEW,GAAG,EAAEP;EAAU,CAAC,EACrDV,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAAE,oBAAoB,EAAEF,KAAK,CAACD,KAAK,CAACM,IAAI;IAAE,yBAAyB,EAAET,SAAS;IAAEQ,GAAG,EAAEP;EAAU,CAAC,EAAEF,QAAQ,CAAC,EACtII,KAAK,GAAGZ,KAAK,CAACe,aAAa,CAACV,UAAU,EAAE;IAAEO,KAAK,EAAEC,KAAK,CAACD,KAAK;IAAED,KAAK,EAAEA;EAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AAClG;AAEA,SAASJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}