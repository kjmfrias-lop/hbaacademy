{"ast":null,"code":"import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { DEFAULT_DELIMITER, STORAGE_INPUT_PREFIX } from '../../utils/constants.mjs';\nimport { validateStorageOperationInputWithPrefix } from '../../utils/validateStorageOperationInputWithPrefix.mjs';\nimport '../../utils/client/base.mjs';\nimport '../../utils/client/getObject.mjs';\nimport { listObjectsV2 } from '../../utils/client/listObjectsV2.mjs';\nimport '../../utils/client/putObject.mjs';\nimport '../../utils/client/createMultipartUpload.mjs';\nimport '../../utils/client/uploadPart.mjs';\nimport '../../utils/client/completeMultipartUpload.mjs';\nimport '../../utils/client/listParts.mjs';\nimport '../../utils/client/abortMultipartUpload.mjs';\nimport '../../utils/client/copyObject.mjs';\nimport '../../utils/client/headObject.mjs';\nimport '../../utils/client/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_PAGE_SIZE = 1000;\nconst list = async (amplify, input) => {\n  const {\n    options = {}\n  } = input;\n  const {\n    s3Config,\n    bucket,\n    keyPrefix: generatedPrefix,\n    identityId\n  } = await resolveS3ConfigAndInput(amplify, options);\n  const {\n    inputType,\n    objectKey\n  } = validateStorageOperationInputWithPrefix(input, identityId);\n  const isInputWithPrefix = inputType === STORAGE_INPUT_PREFIX;\n  // @ts-expect-error pageSize and nextToken should not coexist with listAll\n  if (options?.listAll && (options?.pageSize || options?.nextToken)) {\n    const anyOptions = options;\n    logger.debug(`listAll is set to true, ignoring ${anyOptions?.pageSize ? `pageSize: ${anyOptions?.pageSize}` : ''} ${anyOptions?.nextToken ? `nextToken: ${anyOptions?.nextToken}` : ''}.`);\n  }\n  const listParams = {\n    Bucket: bucket,\n    Prefix: isInputWithPrefix ? `${generatedPrefix}${objectKey}` : objectKey,\n    MaxKeys: options?.listAll ? undefined : options?.pageSize,\n    ContinuationToken: options?.listAll ? undefined : options?.nextToken,\n    Delimiter: getDelimiter(options)\n  };\n  logger.debug(`listing items from \"${listParams.Prefix}\"`);\n  const listInputArgs = {\n    s3Config,\n    listParams\n  };\n  if (options.listAll) {\n    if (isInputWithPrefix) {\n      return _listAllWithPrefix({\n        ...listInputArgs,\n        generatedPrefix\n      });\n    } else {\n      return _listAllWithPath(listInputArgs);\n    }\n  } else {\n    if (isInputWithPrefix) {\n      return _listWithPrefix({\n        ...listInputArgs,\n        generatedPrefix\n      });\n    } else {\n      return _listWithPath(listInputArgs);\n    }\n  }\n};\n/** @deprecated Use {@link _listAllWithPath} instead. */\nconst _listAllWithPrefix = async ({\n  s3Config,\n  listParams,\n  generatedPrefix\n}) => {\n  const listResult = [];\n  let continuationToken = listParams.ContinuationToken;\n  do {\n    const {\n      items: pageResults,\n      nextToken: pageNextToken\n    } = await _listWithPrefix({\n      generatedPrefix,\n      s3Config,\n      listParams: {\n        ...listParams,\n        ContinuationToken: continuationToken,\n        MaxKeys: MAX_PAGE_SIZE\n      }\n    });\n    listResult.push(...pageResults);\n    continuationToken = pageNextToken;\n  } while (continuationToken);\n  return {\n    items: listResult\n  };\n};\n/** @deprecated Use {@link _listWithPath} instead. */\nconst _listWithPrefix = async ({\n  s3Config,\n  listParams,\n  generatedPrefix\n}) => {\n  const listParamsClone = {\n    ...listParams\n  };\n  if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n    logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n    listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n  }\n  const response = await listObjectsV2({\n    ...s3Config,\n    userAgentValue: getStorageUserAgentValue(StorageAction.List)\n  }, listParamsClone);\n  if (!response?.Contents) {\n    return {\n      items: []\n    };\n  }\n  return {\n    items: response.Contents.map(item => ({\n      key: generatedPrefix ? item.Key.substring(generatedPrefix.length) : item.Key,\n      eTag: item.ETag,\n      lastModified: item.LastModified,\n      size: item.Size\n    })),\n    nextToken: response.NextContinuationToken\n  };\n};\nconst _listAllWithPath = async ({\n  s3Config,\n  listParams\n}) => {\n  const listResult = [];\n  const excludedSubpaths = [];\n  let continuationToken = listParams.ContinuationToken;\n  do {\n    const {\n      items: pageResults,\n      excludedSubpaths: pageExcludedSubpaths,\n      nextToken: pageNextToken\n    } = await _listWithPath({\n      s3Config,\n      listParams: {\n        ...listParams,\n        ContinuationToken: continuationToken,\n        MaxKeys: MAX_PAGE_SIZE\n      }\n    });\n    listResult.push(...pageResults);\n    excludedSubpaths.push(...(pageExcludedSubpaths ?? []));\n    continuationToken = pageNextToken;\n  } while (continuationToken);\n  return {\n    items: listResult,\n    excludedSubpaths\n  };\n};\nconst _listWithPath = async ({\n  s3Config,\n  listParams\n}) => {\n  const listParamsClone = {\n    ...listParams\n  };\n  if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n    logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n    listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n  }\n  const {\n    Contents: contents,\n    NextContinuationToken: nextContinuationToken,\n    CommonPrefixes: commonPrefixes\n  } = await listObjectsV2({\n    ...s3Config,\n    userAgentValue: getStorageUserAgentValue(StorageAction.List)\n  }, listParamsClone);\n  const excludedSubpaths = commonPrefixes && mapCommonPrefixesToExcludedSubpaths(commonPrefixes);\n  if (!contents) {\n    return {\n      items: [],\n      excludedSubpaths\n    };\n  }\n  return {\n    items: contents.map(item => ({\n      path: item.Key,\n      eTag: item.ETag,\n      lastModified: item.LastModified,\n      size: item.Size\n    })),\n    nextToken: nextContinuationToken,\n    excludedSubpaths\n  };\n};\nconst mapCommonPrefixesToExcludedSubpaths = commonPrefixes => {\n  return commonPrefixes.reduce((mappedSubpaths, {\n    Prefix\n  }) => {\n    if (Prefix) {\n      mappedSubpaths.push(Prefix);\n    }\n    return mappedSubpaths;\n  }, []);\n};\nconst getDelimiter = options => {\n  if (options?.subpathStrategy?.strategy === 'exclude') {\n    return options?.subpathStrategy?.delimiter ?? DEFAULT_DELIMITER;\n  }\n};\nexport { list };","map":{"version":3,"names":["MAX_PAGE_SIZE","list","amplify","input","options","s3Config","bucket","keyPrefix","generatedPrefix","identityId","resolveS3ConfigAndInput","inputType","objectKey","validateStorageOperationInputWithPrefix","isInputWithPrefix","STORAGE_INPUT_PREFIX","listAll","pageSize","nextToken","anyOptions","logger","debug","listParams","Bucket","Prefix","MaxKeys","undefined","ContinuationToken","Delimiter","getDelimiter","listInputArgs","_listAllWithPrefix","_listAllWithPath","_listWithPrefix","_listWithPath","listResult","continuationToken","items","pageResults","pageNextToken","push","listParamsClone","response","listObjectsV2","userAgentValue","getStorageUserAgentValue","StorageAction","List","Contents","map","item","key","Key","substring","length","eTag","ETag","lastModified","LastModified","size","Size","NextContinuationToken","excludedSubpaths","pageExcludedSubpaths","contents","nextContinuationToken","CommonPrefixes","commonPrefixes","mapCommonPrefixesToExcludedSubpaths","path","reduce","mappedSubpaths","subpathStrategy","strategy","delimiter","DEFAULT_DELIMITER"],"sources":["/Users/kriziafrias/Documents/GitHub/hbaacademy/node_modules/.pnpm/@aws-amplify+storage@6.6.5_@aws-amplify+core@6.4.0/node_modules/@aws-amplify/storage/src/providers/s3/apis/internal/list.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput, validateStorageOperationInputWithPrefix, } from '../../utils';\nimport { listObjectsV2, } from '../../utils/client';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { logger } from '../../../../utils';\nimport { DEFAULT_DELIMITER, STORAGE_INPUT_PREFIX } from '../../utils/constants';\nconst MAX_PAGE_SIZE = 1000;\nexport const list = async (amplify, input) => {\n    const { options = {} } = input;\n    const { s3Config, bucket, keyPrefix: generatedPrefix, identityId, } = await resolveS3ConfigAndInput(amplify, options);\n    const { inputType, objectKey } = validateStorageOperationInputWithPrefix(input, identityId);\n    const isInputWithPrefix = inputType === STORAGE_INPUT_PREFIX;\n    // @ts-expect-error pageSize and nextToken should not coexist with listAll\n    if (options?.listAll && (options?.pageSize || options?.nextToken)) {\n        const anyOptions = options;\n        logger.debug(`listAll is set to true, ignoring ${anyOptions?.pageSize ? `pageSize: ${anyOptions?.pageSize}` : ''} ${anyOptions?.nextToken ? `nextToken: ${anyOptions?.nextToken}` : ''}.`);\n    }\n    const listParams = {\n        Bucket: bucket,\n        Prefix: isInputWithPrefix ? `${generatedPrefix}${objectKey}` : objectKey,\n        MaxKeys: options?.listAll ? undefined : options?.pageSize,\n        ContinuationToken: options?.listAll ? undefined : options?.nextToken,\n        Delimiter: getDelimiter(options),\n    };\n    logger.debug(`listing items from \"${listParams.Prefix}\"`);\n    const listInputArgs = {\n        s3Config,\n        listParams,\n    };\n    if (options.listAll) {\n        if (isInputWithPrefix) {\n            return _listAllWithPrefix({\n                ...listInputArgs,\n                generatedPrefix,\n            });\n        }\n        else {\n            return _listAllWithPath(listInputArgs);\n        }\n    }\n    else {\n        if (isInputWithPrefix) {\n            return _listWithPrefix({ ...listInputArgs, generatedPrefix });\n        }\n        else {\n            return _listWithPath(listInputArgs);\n        }\n    }\n};\n/** @deprecated Use {@link _listAllWithPath} instead. */\nconst _listAllWithPrefix = async ({ s3Config, listParams, generatedPrefix, }) => {\n    const listResult = [];\n    let continuationToken = listParams.ContinuationToken;\n    do {\n        const { items: pageResults, nextToken: pageNextToken } = await _listWithPrefix({\n            generatedPrefix,\n            s3Config,\n            listParams: {\n                ...listParams,\n                ContinuationToken: continuationToken,\n                MaxKeys: MAX_PAGE_SIZE,\n            },\n        });\n        listResult.push(...pageResults);\n        continuationToken = pageNextToken;\n    } while (continuationToken);\n    return {\n        items: listResult,\n    };\n};\n/** @deprecated Use {@link _listWithPath} instead. */\nconst _listWithPrefix = async ({ s3Config, listParams, generatedPrefix, }) => {\n    const listParamsClone = { ...listParams };\n    if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n        logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n        listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n    }\n    const response = await listObjectsV2({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.List),\n    }, listParamsClone);\n    if (!response?.Contents) {\n        return {\n            items: [],\n        };\n    }\n    return {\n        items: response.Contents.map(item => ({\n            key: generatedPrefix\n                ? item.Key.substring(generatedPrefix.length)\n                : item.Key,\n            eTag: item.ETag,\n            lastModified: item.LastModified,\n            size: item.Size,\n        })),\n        nextToken: response.NextContinuationToken,\n    };\n};\nconst _listAllWithPath = async ({ s3Config, listParams, }) => {\n    const listResult = [];\n    const excludedSubpaths = [];\n    let continuationToken = listParams.ContinuationToken;\n    do {\n        const { items: pageResults, excludedSubpaths: pageExcludedSubpaths, nextToken: pageNextToken, } = await _listWithPath({\n            s3Config,\n            listParams: {\n                ...listParams,\n                ContinuationToken: continuationToken,\n                MaxKeys: MAX_PAGE_SIZE,\n            },\n        });\n        listResult.push(...pageResults);\n        excludedSubpaths.push(...(pageExcludedSubpaths ?? []));\n        continuationToken = pageNextToken;\n    } while (continuationToken);\n    return {\n        items: listResult,\n        excludedSubpaths,\n    };\n};\nconst _listWithPath = async ({ s3Config, listParams, }) => {\n    const listParamsClone = { ...listParams };\n    if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n        logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n        listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n    }\n    const { Contents: contents, NextContinuationToken: nextContinuationToken, CommonPrefixes: commonPrefixes, } = await listObjectsV2({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.List),\n    }, listParamsClone);\n    const excludedSubpaths = commonPrefixes && mapCommonPrefixesToExcludedSubpaths(commonPrefixes);\n    if (!contents) {\n        return {\n            items: [],\n            excludedSubpaths,\n        };\n    }\n    return {\n        items: contents.map(item => ({\n            path: item.Key,\n            eTag: item.ETag,\n            lastModified: item.LastModified,\n            size: item.Size,\n        })),\n        nextToken: nextContinuationToken,\n        excludedSubpaths,\n    };\n};\nconst mapCommonPrefixesToExcludedSubpaths = (commonPrefixes) => {\n    return commonPrefixes.reduce((mappedSubpaths, { Prefix }) => {\n        if (Prefix) {\n            mappedSubpaths.push(Prefix);\n        }\n        return mappedSubpaths;\n    }, []);\n};\nconst getDelimiter = (options) => {\n    if (options?.subpathStrategy?.strategy === 'exclude') {\n        return options?.subpathStrategy?.delimiter ?? DEFAULT_DELIMITER;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}