{"ast":null,"code":"import { useEffect } from 'react';\n\n// Updates the height of a <textarea> when the value changes.\nconst useAutoresizeTextArea = (textAreaRef, value) => {\n  useEffect(() => {\n    const resizeTextArea = () => {\n      if (textAreaRef && value) {\n        // We need to reset the height momentarily to get the correct scrollHeight for the textarea\n        textAreaRef.style.height = 'auto';\n        const {\n          scrollHeight\n        } = textAreaRef;\n        // We then set the height directly, outside of the render loop\n        // Trying to set this with state or a ref will product an incorrect value.\n        textAreaRef.style.height = `${scrollHeight}px`;\n      }\n    };\n    resizeTextArea();\n    window.addEventListener('resize', resizeTextArea);\n    return () => {\n      window.removeEventListener('resize', resizeTextArea);\n    };\n  }, [textAreaRef,\n  // Trigger the effect if the value changes\n  value]);\n};\nexport { useAutoresizeTextArea };","map":{"version":3,"names":["useEffect","useAutoresizeTextArea","textAreaRef","value","resizeTextArea","style","height","scrollHeight","window","addEventListener","removeEventListener"],"sources":["/Users/kriziafrias/Documents/GitHub/hbaacademy/node_modules/.pnpm/@aws-amplify+ui-react@6.3.1_oudsktimvrdaaldpvvmmpfaxpq/node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextArea/useAutoresizeTextarea.mjs"],"sourcesContent":["import { useEffect } from 'react';\n\n// Updates the height of a <textarea> when the value changes.\nconst useAutoresizeTextArea = (textAreaRef, value) => {\n    useEffect(() => {\n        const resizeTextArea = () => {\n            if (textAreaRef && value) {\n                // We need to reset the height momentarily to get the correct scrollHeight for the textarea\n                textAreaRef.style.height = 'auto';\n                const { scrollHeight } = textAreaRef;\n                // We then set the height directly, outside of the render loop\n                // Trying to set this with state or a ref will product an incorrect value.\n                textAreaRef.style.height = `${scrollHeight}px`;\n            }\n        };\n        resizeTextArea();\n        window.addEventListener('resize', resizeTextArea);\n        return () => {\n            window.removeEventListener('resize', resizeTextArea);\n        };\n    }, [\n        textAreaRef,\n        // Trigger the effect if the value changes\n        value,\n    ]);\n};\n\nexport { useAutoresizeTextArea };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA,MAAMC,qBAAqB,GAAGA,CAACC,WAAW,EAAEC,KAAK,KAAK;EAClDH,SAAS,CAAC,MAAM;IACZ,MAAMI,cAAc,GAAGA,CAAA,KAAM;MACzB,IAAIF,WAAW,IAAIC,KAAK,EAAE;QACtB;QACAD,WAAW,CAACG,KAAK,CAACC,MAAM,GAAG,MAAM;QACjC,MAAM;UAAEC;QAAa,CAAC,GAAGL,WAAW;QACpC;QACA;QACAA,WAAW,CAACG,KAAK,CAACC,MAAM,GAAG,GAAGC,YAAY,IAAI;MAClD;IACJ,CAAC;IACDH,cAAc,CAAC,CAAC;IAChBI,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,cAAc,CAAC;IACjD,OAAO,MAAM;MACTI,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,cAAc,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CACCF,WAAW;EACX;EACAC,KAAK,CACR,CAAC;AACN,CAAC;AAED,SAASF,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}